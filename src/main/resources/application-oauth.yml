spring:
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/api/v1/auth/code/naver"
            authorization-grant-type: authorization_code
            scope:
              - email
              - nickname
              - gender
              - birthyear
          apple:
            client-id: CLIENT_ID
            client-secret: CLIENT_SECRET
            client-authentication-method: post
            redirect-uri: "{baseUrl}/api/v1/auth/code/apple"
            authorization-grant-type: authorization_code
            scope:
              - openid
              - name
              - email
        provider: #spring security에서 공식 지원하지 않기 때문에 직접 작성
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize #auth code받을 곳
            token_uri: https://nid.naver.com/oauth2.0/token #accesstoken받을 곳
            user-info-uri: https://openapi.naver.com/v1/nid/me #user정보 받을 곳
            user-name-attribute: response #user정보 받음- response 안에 속성 담겨 있음
          apple:
            authorization_uri: https://appleid.apple.com/auth/authorize?response_mode=form_post #"state, code, id_token, user"
            jwk-set-uri: https://appleid.apple.com/auth/keys
            token_uri: https://appleid.apple.com/auth/token #access_token->앱토큰 생성하고 id_token을 decode해서 userinfo를 얻는 듯>
jwt:   #HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
  secret: ${JWT_SECRET}